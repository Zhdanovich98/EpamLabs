/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.0/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id 'war'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.1'

    // This dependency is used by the application.
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
    implementation group: 'log4j', name: 'log4j', version: '1.2.9'
}

application {
    // Define the main class for the application.
    mainClass = 'org.gradle.sample.Greeter'
}

war {
	doFirst{
	    //ant.propertyfile(file: "./src/main/resources/greeting.txt") {
        //entry(key: "version", value: version)
            archiveFileName = 'ep-task.war'
            new File('./build/resources/main/greeting.txt').withWriter('utf-8') { 
            writer -> writer.writeLine version 
   } 
}

}

abstract class Sort extends DefaultTask {
    @TaskAction
    def sorting() {
        def unsortedArray = ['1.1.3', '1.1.0', '1.10.2', '1.9.1', '1.1.8', '1.1.15']
        unsortedArray.sort{ a, b -> 
        def aList = a.findAll(/\d+/)
        def bList = b.findAll(/\d+/)

        for ( int i = 0 ; i < aList.size() ; i++ ) {
            def aVal = aList[i] ? aList[i].toInteger() : 0
            def bVal = bList[i] ? bList[i].toInteger() : 0
            if ( aVal <=> bVal ) { 
                return aVal <=> bVal
        }
    }

    bList.size() > aList.size() ? -1 : 0 
}
        println unsortedArray
    }
}

tasks.register('sort', Sort) 

tasks.register('up_version') {
doLast {
    def versionName = version.split("\\.")
    def last = Integer.parseInt(versionName[versionName.length - 1])
    versionName[versionName.length - 1] = Integer.toString(last + 1)
    versionName = versionName.join(".")

    ant.propertyfile(file: "./gradle.properties") {
        entry(key: "version", value: versionName)
    }
    println "complete!"
}
}
